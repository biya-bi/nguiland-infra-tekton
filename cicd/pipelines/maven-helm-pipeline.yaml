apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: maven-helm-pipeline
  namespace: infra
spec:
  description: |
    This pipeline does the following:
      - Checks out a Git repository containing a Maven project.
      - Builds the Maven project.
      - Builds a Docker image from the Maven project.
      - Pushes the built Docker image to an image registry.
      - Checkouts out a Git repository containing a Helm chart for the project.
      - Updates the image repository and tag to match the just built Docker image.
      - Commits and pushes the changes done on the Helm chart.
      - Deploys the Helm chart to the Kubernetes cluster.
  params:
  - name: maven-repo-url
    type: string
  - name: maven-repo-revision
    type: string
    default: "main"
  - name: maven-context-dir
    type: string
    default: "."
    description: >-
      The directory from which to launch the Maven build
  - name: image-registry-cluster-socket
    default: artifactory-jcr.infra.svc.cluster.local:8082
  - name: image-registry-ingress-socket
    default: artifactory-jcr.infra:30000
  - name: image-registry-repo
    default: docker-local
  - name: image-tag
  - name: helm-chart-repo-url
    type: string
  - name: helm-chart-repo-revision
    type: string
    default: "main"
  - name: helm-chart-dir
    default: "."
  - name: helm-chart-release-version
    default: "v1.0.0"
  - name: helm-chart-release-namespace
    default: ""
  workspaces:
  - name: maven-source
  - name: maven-settings
  - name: maven-local-repo
  - name: docker-config
  - name: helm-source
  - name: ssh-directory
  tasks:
  - name: fetch-maven-source
    taskRef:
      name: git-clone
    params:
    - name: url
      value: $(params.maven-repo-url)
    - name: revision
      value: $(params.maven-repo-revision)
    workspaces:
    - name: output
      workspace: maven-source
  - name: get-maven-repo-name
    taskRef:
      name: git-repo-name
    params:
    - name: url
      value: $(params.maven-repo-url)
  - name: build-maven-source
    runAfter:
      - fetch-maven-source
      - get-maven-repo-name
    taskRef:
      kind: Task
      name: maven
    params:
    - name: GOALS
      value:
        - '-pl'
        - $(params.maven-context-dir)
        - '-B'
        - clean
        - package
    workspaces:
      - name: maven-settings
        workspace: maven-settings
      - name: source
        workspace: maven-source
      - name: maven-local-repo
        workspace: maven-local-repo
  - name: build-docker-image
    runAfter:
      - build-maven-source
    taskRef:
      name: kaniko
    params:
      - name: CONTEXT
        value: $(params.maven-context-dir)
      - name: IMAGE
        value: $(params.image-registry-cluster-socket)/$(params.image-registry-repo)/$(tasks.get-maven-repo-name.results.repo-name):$(params.image-tag)
      # - name: STORAGE_DRIVER
      #   value: "$(params.storageDriver)"
    workspaces:
      - name: source
        workspace: maven-source
      - name: dockerconfig
        workspace: docker-config
  - name: fetch-helm-source
    runAfter:
      - build-docker-image
    taskRef:
      name: git-clone
    params:
    - name: url
      value: $(params.helm-chart-repo-url)
    - name: revision
      value: $(params.helm-chart-repo-revision)
    workspaces:
    - name: output
      workspace: helm-source
    - name: ssh-directory
      workspace: ssh-directory
  - name: update-helm-chart
    runAfter:
      - fetch-helm-source
    taskRef:
      name: yq
    params:
    - name: SCRIPT
      value: |
        image_repo=$(params.image-registry-ingress-socket)/$(params.image-registry-repo)/$(tasks.get-maven-repo-name.results.repo-name)
        image_tag=$(params.image-tag)@$(tasks.build-docker-image.results.IMAGE_DIGEST)

        # Without a temporary file, the in-place edit (yq -i) leads to a permission denied
        temp_dir=`mktemp -d`
        values_yaml="${temp_dir}"/values.yaml

        cp values.yaml "${values_yaml}"
        yq -i '.image.repository = "'"${image_repo}"'", .image.tag = "'"${image_tag}"'"' "${values_yaml}"

        mv "${values_yaml}" values.yaml
        rmdir "${temp_dir}"
    workspaces:
    - name: source
      workspace: helm-source
  - name: push-helm-chart
    runAfter:
      - update-helm-chart
    taskRef:
      name: git-cli
    params:
    - name: GIT_USER_NAME
      value: "Rainbow Tekton"
    - name: GIT_USER_EMAIL
      value: "tekton@rainbow.org"
    - name: GIT_SCRIPT
      value: |
        git config --global --add safe.directory $(workspaces.source.path)
        git add values.yaml
        git commit -m "Update image reference"
        git push origin HEAD:$(params.helm-chart-repo-revision)
    workspaces:
    - name: source
      workspace: helm-source
    - name: ssh-directory
      workspace: ssh-directory
  - name: deploy-helm-chart
    runAfter:
      - push-helm-chart
    taskRef:
      name: helm-upgrade-from-source
    params:
    - name: charts_dir
      value: $(params.helm-chart-dir)
    - name: release_version
      value: $(params.helm-chart-release-version)
    - name: release_name
      value: $(tasks.get-maven-repo-name.results.repo-name)
    - name: release_namespace
      value: $(params.helm-chart-release-namespace)
    workspaces:
    - name: source
      workspace: helm-source
