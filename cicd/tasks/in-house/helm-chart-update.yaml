apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: helm-chart-update
  namespace: infra
  labels:
    app.kubernetes.io/version: "0.1"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/categories: Developer Tools
    tekton.dev/tags: yq
    tekton.dev/displayName: "Update Helm chart"
    tekton.dev/platforms: "linux/amd64"
spec:
  description: >-
    This task updates the values used in the specified Helm chart. In particular, the image repository and tag will be updated.
    The application Git commit ID is also added to the pod's annotations if the application source workspace is specified.
  params:
    - name: repository
    - name: tag
    - name: chart-dir
      default: "."
    - name: environment
      default: ""
    - name: app-context-dir
      default: "."
    - name: git-cli-image
      default: cgr.dev/chainguard/git:root-2.39@sha256:7759f87050dd8bacabe61354d75ccd7f864d6b6f8ec42697db7159eccd491139
    - name: yq-image
      default: linuxserver/yq:3.4.3
  workspaces:
    - name: chart-source
    - name: app-source
      optional: true
  results:
    - name: previous-repository
    - name: previous-tag
    - name: current-repository
    - name: current-tag
    - name: values-file
  steps:
    - name: get-commit-id
      image: $(params.git-cli-image)
      script: |
        #!/usr/bin/env sh

        set -euo pipefail

        if [[ "$(workspaces.app-source.bound)" != "true" ]]; then
          printf "Exiting because the application source workspace was not specified"
          exit 0
        fi

        app_details_dir=/workspace/app-details
        mkdir -p "${app_details_dir}"
        commit_id_file="${app_details_dir}"/commit-id

        git config --global --add safe.directory $(workspaces.app-source.path)

        cd $(workspaces.app-source.path)/$(params.app-context-dir)

        git rev-parse HEAD > "${commit_id_file}"

        chmod 644 "${commit_id_file}"

    - name: update
      image: $(params.yq-image)
      workingDir: $(workspaces.chart-source.path)/$(params.chart-dir)
      script: |
        set -euo pipefail

        parse_environment() {
          local environment=$(params.environment)
          if [[ -n "${environment}" ]] && [[ "${environment}" != "local" ]]; then
            echo "${environment}"
          else
            echo ""
          fi
        }

        get_values_file() {
          local environment="$1"
          if [[ -n "${environment}" ]]; then
            local values_file=values."${environment}".yaml
            if [[ ! -f "${values_file}" ]]; then
              cp values.yaml "${values_file}"
            fi
          else
            values_file="values.yaml"
          fi
          echo "${values_file}"
        }

        update_image() {
          local values_file="$1"

          local repository=$(params.repository)
          local tag=$(params.tag)

          local previous_repository=$(yq .image.repository "${values_file}")
          local previous_tag=$(yq .image.tag "${values_file}")

          yq -y -i '(.image.repository = "'"${repository}"'") | (.image.tag = "'"${tag}"'")' "${values_file}"

          printf "${previous_repository}" | tr -d \" > $(results.previous-repository.path)
          printf "${previous_tag}" | tr -d \" > $(results.previous-tag.path)

          printf "${repository}" | tr -d \" > $(results.current-repository.path)
          printf "${tag}" | tr -d \" > $(results.current-tag.path)
        }

        set_app_commit_id() {
          local environment="$1"
          local values_file="$2"

          commit_id_file=/workspace/app-details/commit-id

          if [[ -f "${commit_id_file}" ]] && [[ -n "${environment}" ]]; then
            commit_id=$(cat "${commit_id_file}")
            yq -y -i '(.podAnnotations.appCommitId = "'"${commit_id}"'")' "${values_file}"
          fi
        }

        environment=$(parse_environment)
        values_file=$(get_values_file "${environment}")
        update_image "${values_file}"
        set_app_commit_id "${environment}" "${values_file}"

        printf "${values_file}" | tr -d \" > $(results.values-file.path)

